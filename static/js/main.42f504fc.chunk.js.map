{"version":3,"sources":["api.ts","types/Status.ts","components/Loader/Loader.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/TodoModal/TodoModal.tsx","App.tsx","helper.ts","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","Loader","className","TodoFilter","statusFilter","titleFilter","setStatusFilter","setTitleFilter","value","onChange","event","target","All","Active","Completed","type","placeholder","style","pointerEvents","onClick","TodoList","todos","todoSelected","setTodoSelected","map","todo","id","completed","title","TodoModal","useState","userFromServer","setUserFromServer","useEffect","userId","href","email","name","App","todosFromServer","setTodos","isTodosLoading","setIsTodosLoading","todosToView","filter","toLowerCase","includes","filterTodos","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42f504fc.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Status } from '../../types/Status';\n\ninterface Props {\n  statusFilter: string;\n  titleFilter: string;\n  setStatusFilter: (status: Status) => void;\n  setTitleFilter: (title: string) => void;\n}\n\nexport const TodoFilter = ({\n  statusFilter,\n  titleFilter,\n  setStatusFilter,\n  setTitleFilter,\n}: Props) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case Status.All:\n        setStatusFilter(Status.All);\n        break;\n\n      case Status.Active:\n        setStatusFilter(Status.Active);\n        break;\n\n      case Status.Completed:\n        setStatusFilter(Status.Completed);\n        break;\n\n      default:\n        setStatusFilter(Status.All);\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={statusFilter}\n            onChange={handleFilterChange}\n          >\n            <option value={Status.All}>All</option>\n            <option value={Status.Active}>Active</option>\n            <option value={Status.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={titleFilter}\n          onChange={event => setTitleFilter(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {titleFilter && (\n            <button\n              aria-label=\"Delete query\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setTitleFilter('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  todoSelected: Todo | null;\n  setTodoSelected: (todo: Todo | null) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  todoSelected,\n  setTodoSelected,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={`${todo.completed ? 'has-text-success' : 'has-text-danger'}`}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setTodoSelected(todo)}\n            >\n              <span\n                className=\"icon\"\n              >\n                <i className={`far ${todoSelected ? 'fa-eye-slash' : 'fa-eye'}`} />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n      {/* <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">qui ullam ratione quibusdam voluptatem quia omnis</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todoSelected: Todo;\n  setTodoSelected: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todoSelected,\n  setTodoSelected,\n}) => {\n  const [userFromServer, setUserFromServer] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todoSelected.userId)\n      .then(setUserFromServer);\n  }, [todoSelected.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!userFromServer ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoSelected.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setTodoSelected(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoSelected.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todoSelected.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${userFromServer.email}`}>\n                {userFromServer.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\n\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoList } from './components/TodoList';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { filterTodos } from './helper';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodos] = useState<Todo[]>([]);\n  const [isTodosLoading, setIsTodosLoading] = useState(true);\n  const [statusFilter, setStatusFilter] = useState<Status>(Status.All);\n  const [titleFilter, setTitleFilter] = useState('');\n  const [todoSelected, setTodoSelected] = useState<Todo | null>(null);\n\n  const todosToView = filterTodos(todosFromServer, statusFilter, titleFilter);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsTodosLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                statusFilter={statusFilter}\n                titleFilter={titleFilter}\n                setStatusFilter={setStatusFilter}\n                setTitleFilter={setTitleFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isTodosLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todosToView}\n                    todoSelected={todoSelected}\n                    setTodoSelected={setTodoSelected}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoSelected && (\n        <TodoModal\n          todoSelected={todoSelected}\n          setTodoSelected={setTodoSelected}\n        />\n      )}\n    </>\n  );\n};\n","import { Status } from './types/Status';\nimport { Todo } from './types/Todo';\n\nexport const filterTodos = (\n  todos: Todo[],\n  statusFilter: string,\n  titleFilter: string,\n) => {\n  return todos\n    .filter(todo => {\n      switch (statusFilter) {\n        case Status.All:\n          return true;\n\n        case Status.Active:\n          return !todo.completed;\n\n        case Status.Completed:\n          return todo.completed;\n\n        default:\n          return true;\n      }\n    })\n    .filter(todo => todo.title.toLowerCase()\n      .includes(titleFilter.toLowerCase()));\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}